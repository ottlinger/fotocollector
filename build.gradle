plugins {
  id 'net.researchgate.release' version '2.3.4'
}

import org.gradle.logging.ShowStacktrace
gradle.startParameter.showStacktrace = ShowStacktrace.ALWAYS

apply plugin: 'application'
apply plugin: 'java'
sourceCompatibility = 1.8
targetCompatibility = 1.8
test {
    testLogging {
        events "failed"
        exceptionFormat "short"

// set options for log level DEBUG
        debug {
            events "started", "skipped", "failed"
            exceptionFormat "full"
        }

        // remove standard output/error logging from --info builds
        // by assigning only 'failed' and 'skipped' events
        info.events = ["failed", "skipped"]
    }
}

// Codecov integration
apply plugin: 'jacoco'
jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}

apply plugin: 'eclipse'
apply plugin: 'idea'

defaultTasks 'clean','build'

mainClassName  = 'de.aikiit.fotocollector.FotoCollectorApplication'
task uberjar(type: Jar) {
    from files(sourceSets.main.output.classesDir)
    from {configurations.compile.collect {zipTree(it)}} {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile 'commons-codec:commons-codec:1.10'
    compile 'com.google.guava:guava:19.0'
    compile 'com.fasterxml.jackson.core:jackson-core:2.7.3'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.7.3'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.7.3'
    compile 'org.apache.commons:commons-collections4:4.1'
    testCompile group: 'junit', name: 'junit', version: '4.+'
    testCompile 'org.mockito:mockito-all:2.0.2-beta'
    testCompile 'org.assertj:assertj-core:3.3.0'
}

jar {
    manifest {
        attributes 'Implementation-Title': 'FotoCollector',
                   'Implementation-Version': version,
                   'Main-Class': mainClassName
    }
}
