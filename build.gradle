import java.text.SimpleDateFormat

plugins {
    id 'net.researchgate.release' version '3.1.0'
    id 'com.gradleup.shadow' version '9.0.0-rc1'
    id 'java'
    id 'jacoco'
    id 'project-report'
    id 'application'
    id 'idea'
    id 'eclipse'
}

base {
    defaultTasks 'clean', 'build'
    gradle.startParameter.showStacktrace = ShowStacktrace.ALWAYS
}

Date buildTimeAndDate = new Date()
ext {
    // Generate JAR manifest only if code was compiled or recompiled;
    // otherwise the junit5Test task will always be executed even if
    // no code changes were made. The reason is that the generation of
    // the buildDate and buildTime causes JAR manifests to be modified
    // which triggers unnecessary rebuilding of the dependent JARs.
    generateManifest = false
    buildDate = new SimpleDateFormat('yyyy-MM-dd').format(buildTimeAndDate)
    buildTime = new SimpleDateFormat('HH:mm:ss.SSSZ').format(buildTimeAndDate)
}

java {
    sourceCompatibility = rootProject.sourceCompatibility
    targetCompatibility = rootProject.targetCompatibility
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport // report is always generated after tests run
}
jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    reports {
        xml.required = true
        html.required = false
    }
}

jacoco {
    toolVersion = "0.8.13"
    // reportsDirectory = layout.buildDirectory.dir('reports/jacoco/test/html/')
}


application {
    mainClass = 'de.aikiit.fotocollector.FotoCollectorApplication'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'commons-codec:commons-codec:1.19.0'
    implementation 'com.google.guava:guava:33.4.8-jre'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.19.1'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.19.1'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.19.1'
    implementation 'org.projectlombok:lombok:1.18.38'
    annotationProcessor 'org.projectlombok:lombok:1.18.38'
    testImplementation(platform('org.junit:junit-bom:5.13.4'))
    testImplementation('org.junit.jupiter:junit-jupiter')
    testRuntimeOnly('org.junit.platform:junit-platform-launcher')
    testImplementation 'org.mockito:mockito-core:5.18.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.18.0'
    testImplementation 'org.assertj:assertj-core:3.27.3'
    implementation 'org.slf4j:slf4j-api:2.0.17'
    implementation 'org.slf4j:slf4j-log4j12:2.0.17'
}

jar {
    onlyIf {
        project.generateManifest
    }
    manifest {
        attributes(
                'Implementation-Title': 'FotoCollector',
                'Implementation-Version': project.version,
                'Built-By': System.properties['user.name'],
                'Created-By': "JDK ${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']}) ${System.properties['os.name']} ${System.properties['os.version']} ${System.properties['os.arch']}".toString(),
                'Build-Date': buildDate,
                'Build-Time': buildTime,
                'Specification-Title': project.name,
                'Specification-Version': project.version
        )
    }
}

check.dependsOn jacocoTestReport
